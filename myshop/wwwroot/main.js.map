{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/products/category-list/category-list.component.ts","./src/app/products/category-list/category-list.component.html","./src/app/products/create-or-update-product/create-or-update-product.component.ts","./src/app/products/create-or-update-product/create-or-update-product.component.html","./src/app/products/product-list.component.ts","./src/app/products/product-list.component.html","./src/app/products/product/product-discount/product-discount.component.ts","./src/app/products/product/product-discount/product-discount.component.html","./src/app/products/product/product.component.ts","./src/app/products/product/product.component.html","./src/app/products/purchase-product/purchase-product.component.ts","./src/app/products/purchase-product/purchase-product.component.html","./src/app/register/password-match.validator.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/shared/common/constants.ts","./src/app/shared/services/alert.service.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/services/category.service.ts","./src/app/shared/services/order.service.ts","./src/app/shared/services/product.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Route, RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { ProductListComponent } from './products/product-list.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n  {\n    path: '',\n    component: ProductListComponent\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">My Shop</a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbarNav\"\n      aria-controls=\"navbarNav\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div\n      class=\"collapse navbar-collapse justify-content-between\"\n      id=\"navbarNav\"\n    >\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" routerLink=\"/\">Products</a>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link active\"\n            routerLink=\"/login\"\n            *ngIf=\"!isAuthenticated\"\n          >\n            Login\n          </a>\n          <span class=\"nav-item d-flex align-items-end\"  *ngIf=\"isAuthenticated\">\n            <p class=\"text-light\">{{ userName }}</p>\n            <button (click)=\"logout()\" class=\"btn btn-outline-light ms-4\">Logout</button>\n          </span>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n<div class=\"p-5\">\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from './shared/services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'My Shop';\n\n  isAuthenticated!: boolean;\n  userName?: string;\n\n  private subs?: Subscription\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.initAuth();\n    \n    this.subs = this.authService.currentUser$\n      .subscribe((user) => {\n        this.userName = user?.name;\n        this.isAuthenticated = !!this.userName;\n      })\n  }\n\n  ngOnDestroy(): void {\n    this.subs?.unsubscribe;\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RegisterComponent } from './register/register.component';\nimport { PurchaseProductComponent } from './products/purchase-product/purchase-product.component';\nimport { CategoryListComponent } from './products/category-list/category-list.component';\nimport { ProductListComponent } from './products/product-list.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProductComponent } from './products/product/product.component';\nimport { ProductDiscountComponent } from './products/product/product-discount/product-discount.component';\nimport { CreateOrUpdateProductComponent } from './products/create-or-update-product/create-or-update-product.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProductListComponent,\n    CategoryListComponent,\n    PurchaseProductComponent,\n    RegisterComponent,\n    ProductComponent,\n    ProductDiscountComponent,\n    CreateOrUpdateProductComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Roles } from 'src/app/shared/common/constants';\nimport { AlertService } from 'src/app/shared/services/alert.service';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { OrderService } from 'src/app/shared/services/order.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  form!: FormGroup;\n  private subs?: Subscription;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private orderService: OrderService,\n    private router: Router,\n    private alertService: AlertService,\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userName: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subs?.unsubscribe();\n  }\n\n  onSubmit() {\n    if (this.form.invalid) return;\n    const userName = this.form.get('userName')?.value;\n    const password = this.form.get('password')?.value;\n    this.authService.login(userName, password)\n      .subscribe({\n        next: response => {\n          this.authService.saveAuthData(response);\n          this.orderService.completePendingOrder();\n          this.router.navigate(['/']);\n        },\n        error: (err) => {\n          this.alertService.fail(err.error.message);\n        }\n      })\n  }\n}\n","<div class=\"container\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-8 col-lg-6\">\n      <div class=\"card\">\n        <div class=\"card-body p-4 p-md-5\">\n          <div class=\"clearfix text-center mb-4\">\n            <h1>My Shop</h1>\n          </div>\n          <form\n            id=\"loginForm\"\n            [formGroup]=\"form\"\n            (submit)=\"onSubmit()\"\n            markRequired\n          >\n            <div class=\"form-group mb-2\">\n              <input\n                formControlName=\"userName\"\n                class=\"form-control\"\n                placeholder=\"Username\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <input\n                formControlName=\"password\"\n                type=\"password\"\n                class=\"form-control\"\n                placeholder=\"Password\"\n              />\n\n              <a class=\"btn btn-link\" routerLink=\"/register\">\n                Don't have account? Register now\n              </a>\n            </div>\n\n            <div class=\"form-group text-center\">\n              <button\n                class=\"btn btn-primary btn-block\"\n                data-effect=\"wave\"\n                type=\"submit\"\n                [disabled]=\"form.invalid\"\n              >\n                Log In\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Category } from 'src/app/shared/models/category';\nimport { CategoryService } from 'src/app/shared/services/category.service';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.scss']\n})\nexport class CategoryListComponent implements OnInit {\n  @Input() defaultCategory?: number;\n  categories$!: Observable<Category[]>;\n\n  @Output() categoryChanged = new EventEmitter<number | undefined>();\n\n  constructor(private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n    this.categories$ = this.categoryService.getCategories();\n  }\n\n  changeCategory(event: Event) {\n    const categoryId = +(event.target as HTMLSelectElement).value;\n    if (!categoryId) {\n      this.categoryChanged.emit(undefined);\n    }\n    this.categoryChanged.emit(categoryId);\n  }\n}\n","<select class=\"form-control\" (change)=\"changeCategory($event)\">\n    <option [value]=\"null\">All Categories</option>\n    <option *ngFor=\"let cat of categories$ | async\" [value]=\"cat.id\" [selected]=\"cat.id == defaultCategory\">{{cat.name}}</option>\n</select>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Product } from 'src/app/shared/models/product';\nimport { AlertService } from 'src/app/shared/services/alert.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\n\n@Component({\n  selector: 'app-create-or-update-product',\n  templateUrl: './create-or-update-product.component.html',\n  styleUrls: ['./create-or-update-product.component.scss']\n})\nexport class CreateOrUpdateProductComponent implements OnInit {\n  edit = false;\n  form!: FormGroup;\n  hasDiscount = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef<CreateOrUpdateProductComponent>,\n    private productService: ProductService,\n    private alertService: AlertService,\n    @Inject(MAT_DIALOG_DATA) private data?: Product) { }\n\n  ngOnInit(): void {\n    this.dialogRef\n    this.initForm();\n\n    if (this.data && this.data.id) {\n      const { discount, ...product } = this.data;\n      this.form.patchValue(product);\n      if (discount) {\n        this.form.patchValue({\n          discountQuantity: discount.quantity,\n          discountPercentage: discount.percentage,\n        });\n        this.hasDiscount = true;\n      }\n      this.edit = true;\n    }\n  }\n\n  onSubmit() {\n    if (this.edit) {\n      this.productService.updateProduct(this.form.getRawValue())\n        .subscribe({\n          next: () => {\n            this.alertService.success(\"Product updated successfully\");\n            this.dialogRef.close();\n          },\n          error: (err) => this.alertService.fail(err.error.message),\n        });\n    } else {\n      this.productService.createProduct(this.form.getRawValue())\n        .subscribe({\n          next: () => {\n            this.alertService.success(\"Product added successfully\");\n            this.dialogRef.close();\n          },\n          error: (err) => this.alertService.fail(err.error.message),\n        });\n    }\n  }\n\n  onChangeCategory(categoryId?: number | undefined) {\n    this.form.get('categoryId')?.setValue(categoryId);\n    if (!categoryId) {\n      this.form.get('categoryId')?.setErrors({\n        required: true,\n      });\n    }\n  }\n\n  toggleDiscount() {\n    this.hasDiscount = !this.hasDiscount;\n    if (!this.hasDiscount) {\n      this.form.patchValue({\n        discountQuantity: 0,\n        discountPercentage: 0,\n      })\n    }\n  }\n\n  isErrorState(control: AbstractControl | null) {\n    return (control?.dirty || control?.touched) && control?.invalid\n  }\n\n  private initForm() {\n    this.form = this.fb.group({\n      id: [0],\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      description: ['', [Validators.maxLength(500)]],\n      categoryId: [null, [Validators.required]],\n      price: [0, [Validators.required, Validators.min(0)]],\n      discountQuantity: [0, [Validators.required, Validators.min(0)]],\n      discountPercentage: [0, [Validators.required, Validators.min(0), Validators.max(100)]],\n    })\n  }\n}\n","<form id=\"productForm\" [formGroup]=\"form\" (submit)=\"onSubmit()\" markRequired>\n  <div class=\"form-group mb-2\">\n    <textarea\n      formControlName=\"name\"\n      class=\"form-control\"\n      placeholder=\"name\"\n    ></textarea>\n    <ng-container *ngIf=\"isErrorState(form.get('name'))\">\n      <div\n        class=\"text-danger small\"\n        *ngIf=\"form.get('name')?.errors!['maxlength']\"\n      >\n        Name cannot be more than 100 characters\n      </div>\n    </ng-container>\n  </div>\n  <div class=\"form-group mb-2\">\n    <textarea\n      formControlName=\"description\"\n      class=\"form-control\"\n      placeholder=\"description\"\n    ></textarea>\n    <ng-container *ngIf=\"isErrorState(form.get('description'))\">\n      <div\n        class=\"text-danger small\"\n        *ngIf=\"form.get('description')?.errors!['maxlength']\"\n      >\n        Name cannot be more than 500 characters\n      </div>\n    </ng-container>\n  </div>\n  <div class=\"form-group mb-2\">\n    <app-category-list\n      [defaultCategory]=\"form.get('categoryId')?.value\"\n      (categoryChanged)=\"onChangeCategory($event)\"\n    ></app-category-list>\n  </div>\n  <div class=\"form-group mb-2\">\n    <input\n      formControlName=\"price\"\n      class=\"form-control\"\n      placeholder=\"price\"\n      type=\"number\"\n    />\n    <ng-container *ngIf=\"isErrorState(form.get('price'))\">\n      <div class=\"text-danger small\" *ngIf=\"form.get('price')?.errors!['min']\">\n        Price cannot be negative\n      </div>\n    </ng-container>\n  </div>\n\n  <div class=\"form-group mb-2\">\n    <div class=\"form-check\">\n      <input\n        type=\"checkbox\"\n        [checked]=\"hasDiscount\"\n        class=\"form-check-input\"\n        (change)=\"toggleDiscount()\"\n      />\n      <label class=\"form-check-label\">\n        Discount\n      </label>\n    </div>\n  </div>\n\n  <ng-container *ngIf=\"hasDiscount\">\n    <div class=\"form-group mb-2\">\n      Buy&nbsp;&nbsp;&nbsp;\n      <input\n        formControlName=\"discountQuantity\"\n        class=\"form-control-sm\"\n        type=\"number\"\n        [ngClass]=\"{ 'is-invalid': isErrorState(form.get('discountQuantity')) }\"\n      />\n      &nbsp;&nbsp;&nbsp; get\n      <input\n        formControlName=\"discountPercentage\"\n        class=\"form-control-sm\"\n        type=\"number\"\n        [ngClass]=\"{\n          'is-invalid': isErrorState(form.get('discountPercentage'))\n        }\"\n      />\n      &nbsp;&nbsp;% &nbsp;&nbsp; off\n    </div>\n  </ng-container>\n\n  <div class=\"form-group text-center\">\n    <button\n      class=\"btn btn-primary btn-block\"\n      data-effect=\"wave\"\n      type=\"submit\"\n      [disabled]=\"form.invalid\"\n    >\n      {{ edit ? 'Update' : 'Create' }}\n    </button>\n  </div>\n</form>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Observable, Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Product } from 'src/app/shared/models/product';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { Roles } from '../shared/common/constants';\nimport { AlertService } from '../shared/services/alert.service';\nimport { AuthService } from '../shared/services/auth.service';\nimport { CreateOrUpdateProductComponent } from './create-or-update-product/create-or-update-product.component';\nimport { PurchaseProductComponent } from './purchase-product/purchase-product.component';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.scss']\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n  products$!: Observable<Product[]>;\n  isAdmin$!: Observable<boolean>;\n  categoryId?: number;\n\n  private unsubsribe$ = new Subject<void>();\n\n  constructor(\n    private productService: ProductService,\n    private dialog: MatDialog,\n    private authService: AuthService,\n    private alertService: AlertService,\n    ) { }\n\n  ngOnInit(): void {\n    this.fetchProducts();\n    this.isAdmin$ = this.authService.currentUser$\n      .pipe(map(user => {\n        return user && this.authService.hasRole(Roles.ADMIN) || false;\n      }));\n  }\n\n  ngOnDestroy(): void {\n    this.unsubsribe$.next();\n    this.unsubsribe$.complete();\n  }\n\n  onChangeCategory(categoryId?: number) {\n    this.categoryId = categoryId;\n    this.fetchProducts();\n  }\n\n  fetchProducts() {\n    this.products$ = this.productService.getProducts(this.categoryId);\n  }\n  \n  openPurchaseModal(product: Product) {\n    this.dialog.open(PurchaseProductComponent, {\n      data: product,\n    });\n  }\n\n  addProduct() {\n    this.dialog.open(CreateOrUpdateProductComponent)\n      .afterClosed()\n      .pipe(takeUntil(this.unsubsribe$))\n      .subscribe(() => this.fetchProducts());\n  }\n\n  updateProduct(product: Product) {\n    this.dialog.open(CreateOrUpdateProductComponent, {\n      data: product,\n    }).afterClosed()\n      .pipe(takeUntil(this.unsubsribe$))\n      .subscribe(() => this.fetchProducts());\n  }\n\n  deleteProduct(product: Product) {\n    this.productService.deleteProduct(product.id)\n      .subscribe({\n        next: () => {\n          this.alertService.success(\"Product deleted successfully\");\n          this.fetchProducts();\n        },\n        error: err => {\n          this.alertService.fail(err.error.message);\n        }\n      });\n  }\n}\n","<app-category-list\n  (categoryChanged)=\"onChangeCategory($event)\"\n></app-category-list>\n<div class=\"d-flex justify-content-end mt-2\" *ngIf=\"isAdmin$ | async\">\n  <button class=\"btn btn-primary\" (click)=\"addProduct()\">New Product</button>\n</div>\n\n<div class=\"container-fluid mt-3\">\n  <div class=\"row\">\n    <ng-container *ngIf=\"products$ | async as products\">\n      <ng-container *ngIf=\"products.length > 0; else empty\">\n        <div *ngFor=\"let product of products\" class=\"col-12 col-sm-6 col-md-3\">\n          <app-product\n            [product]=\"product\"\n            [canEdit]=\"isAdmin$ | async\"\n            (purchaseProduct)=\"openPurchaseModal($event)\"\n            (editProduct)=\"updateProduct($event)\"\n            (deleteProduct)=\"deleteProduct($event)\"\n          ></app-product>\n        </div>\n      </ng-container>\n    </ng-container>\n    <ng-template #empty>\n      <div class=\"alert alert-info\">No products found</div>\n    </ng-template>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Discount } from 'src/app/shared/models/discount';\n\n@Component({\n  selector: 'app-product-discount',\n  templateUrl: './product-discount.component.html',\n  styleUrls: ['./product-discount.component.scss']\n})\nexport class ProductDiscountComponent implements OnInit {\n  @Input() discount!: Discount;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p class=\"card-text small\"><b>BUY {{discount.quantity}} GET {{discount.percentage|percent}} OFF!</b></p>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Product } from 'src/app/shared/models/product';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent {\n  @Input()product!: Product;\n  @Input() canEdit: boolean | null = false;\n  @Output() purchaseProduct = new EventEmitter<Product>();\n  @Output() editProduct = new EventEmitter<Product>();\n  @Output() deleteProduct = new EventEmitter<Product>();\n\n  constructor() { }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <h3 class=\"card-title\">{{ product.name }}</h3>\n    <p class=\"card-text small text-muted\">\n      {{ product.categoryName }}\n    </p>\n    <div class=\"row\">\n      <p class=\"card-text col-12 col-sm-6\">{{ product.price }}&nbsp;EGP</p>\n      <div class=\"card-text col-12 col-sm-6\">\n        <app-product-discount\n          *ngIf=\"product.discount\"\n          [discount]=\"product.discount\"\n        ></app-product-discount>\n      </div>\n    </div>\n    <div class=\"d-flex justify-content-between\">\n      <button class=\"btn btn-outline-primary\" (click)=\"purchaseProduct.emit(this.product)\">Buy</button>\n      <span *ngIf=\"canEdit\">\n        <button class=\"btn btn-outline-secondary\" (click)=\"editProduct.emit(this.product)\">Edit</button>\n        <button class=\"btn btn-outline-danger\" (click)=\"deleteProduct.emit(this.product)\">Delete</button>\n      </span>\n    </div>\n  </div>\n</div>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ErrorResponse } from 'src/app/shared/models/error-response';\nimport { Product } from 'src/app/shared/models/product';\nimport { AlertService } from 'src/app/shared/services/alert.service';\nimport { OrderService } from 'src/app/shared/services/order.service';\n\n@Component({\n  selector: 'app-purchase-product',\n  templateUrl: './purchase-product.component.html',\n  styleUrls: ['./purchase-product.component.scss']\n})\nexport class PurchaseProductComponent implements OnDestroy{\n  quantity = 1;\n  hasDiscount = false;\n  originalPrice = 0;\n\n  subs?: Subscription;\n\n  get invalidQuantity() {\n    return this.quantity <= 0 || this.quantity > 100;\n  }\n  \n  get finalPrice() {\n    if (this.quantity <= 0) {\n      this.hasDiscount = false;\n      return 0;\n    }\n    if (!this.product.discount || this.product.discount.quantity > this.quantity || this.product.discount.percentage == 0) {\n      this.hasDiscount = false;\n      return this.quantity * this.product.price;\n    }\n    this.originalPrice = this.quantity * this.product.price;\n    this.hasDiscount = true;\n    return this.originalPrice * (1 - this.product.discount.percentage);\n  }\n\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public product: Product,\n    private dialogRef: MatDialogRef<PurchaseProductComponent>,\n    private orderService: OrderService,\n    private router: Router,\n    private alertService: AlertService,\n  ) { }\n\n  ngOnDestroy(): void {\n    this.subs?.unsubscribe();\n  }\n\n  createOrder() {\n    if (this.invalidQuantity) return;\n    this.orderService.createOrder({\n      productId: this.product.id,\n      quantity: this.quantity,\n    }).subscribe({\n      next: response => {\n        if (response.registrationNeeded) {\n          this.handleRegistrationNeeded(response.orderId);\n          return;\n        }\n        this.alertService.success(\"Order places successfully!\")\n        this.dialogRef.close();\n      },\n      error: (err : HttpErrorResponse) => {\n        this.alertService.fail(err.error.message);\n      }\n    })\n  }\n\n  handleRegistrationNeeded(orderId: number) {\n    localStorage.setItem(\"temp_order\", orderId.toString());\n    \n    this.subs = this.alertService.fail(\"Please login to complete your order\", \"Login/Register\")\n      .afterDismissed()\n      .subscribe((value) => {\n        if (value.dismissedByAction) {\n          this.router.navigate(['/login']);\n        }\n        this.dialogRef.close();\n      });\n  }\n}\n","<h1 mat-dialog-title>{{ product.name }}</h1>\n<div mat-dialog-content>\n  <div class=\"d-flex justify-content-between\">\n    <input\n      type=\"number\"\n      [(ngModel)]=\"quantity\"\n      #qty\n      min=\"1\"\n      max=\"100\"\n      class=\"form-control-sm\"\n      cdkFocusInitial\n    />\n    <p>\n      {{ finalPrice | number: '1.0-2' }}&nbsp;EGP\n      <span *ngIf=\"hasDiscount\" class=\"text-muted\">\n        &nbsp;\n        <del>{{ originalPrice | number: '1.0-2' }}&nbsp;EGP</del>\n      </span>\n    </p>\n  </div>\n</div>\n<div mat-dialog-actions class=\"d-flex justify-content-between\">\n  <button class=\"btn btn-outline-secondary\" mat-dialog-close>No</button>\n  <button class=\"btn btn-primary\" [disabled]=\"invalidQuantity\" (click)=\"createOrder()\">\n    Confirm\n  </button>\n</div>\n","import { FormGroup } from \"@angular/forms\";\r\n\r\nexport const mustMatch = (controlId: string, otherControlId: string) => {\r\n    return (formGroup: FormGroup) => {\r\n        const value1 = formGroup.get(controlId)?.value;\r\n        const value2 = formGroup.get(otherControlId)?.value;\r\n\r\n        return value1 === value2 ? null : {mustMatch: true};\r\n    }\r\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Roles } from 'src/app/shared/common/constants';\nimport { AlertService } from 'src/app/shared/services/alert.service';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { OrderService } from 'src/app/shared/services/order.service';\nimport { mustMatch } from './password-match.validator';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  form!: FormGroup;\n\n  private subs?: Subscription;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private orderService: OrderService,\n    private router: Router,\n    private alertService: AlertService,\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userName: ['', [Validators.required, Validators.maxLength(25), Validators.pattern(\"^[a-zA-Z0-9_]*$\")]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      confirmPassword: ['', Validators.required],\n      displayName: ['', [Validators.required, Validators.maxLength(50), Validators.pattern(\"^[a-zA-Z0-9_ ]*$\")]]\n    }, {\n      validators: [mustMatch('password', 'confirmPassword')]\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subs?.unsubscribe();\n  }\n\n  onSubmit() {\n    if (this.form.invalid) return;\n    this.authService.registerCustomer(this.form.getRawValue())\n      .subscribe({\n        next: response => {\n          this.authService.saveAuthData(response);\n          this.orderService.completePendingOrder();\n          this.router.navigate(['/']);\n        },\n        error: (err) => {\n          this.alertService.fail(err.error.message);\n        }\n      })\n  }\n\n  isErrorState(control: AbstractControl | null) {\n    return (control?.dirty || control?.touched) && control?.invalid\n  }\n}\n","<div class=\"container\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-8 col-lg-6\">\n      <div class=\"card\">\n        <div class=\"card-body p-4 p-md-5\">\n          <form\n            id=\"registerForm\"\n            [formGroup]=\"form\"\n            (submit)=\"onSubmit()\"\n            markRequired\n          >\n            <div class=\"form-group mb-2\">\n              <input\n                formControlName=\"userName\"\n                class=\"form-control\"\n                placeholder=\"Username\"\n              />\n              <ng-container *ngIf=\"isErrorState(form.get('userName'))\">\n                <div\n                  class=\"text-danger small\"\n                  *ngIf=\"form.get('userName')?.errors!['pattern']\"\n                >\n                  Username must be alphanumeric\n                </div>\n                <div\n                  class=\"text-danger small\"\n                  *ngIf=\"form.get('userName')?.errors!['maxlength']\"\n                >\n                  Username cannot be more than 25 character\n                </div>\n              </ng-container>\n            </div>\n            <div class=\"form-group mb-2\">\n              <input\n                formControlName=\"password\"\n                type=\"password\"\n                class=\"form-control\"\n                placeholder=\"Password\"\n              />\n              <ng-container *ngIf=\"isErrorState(form.get('password'))\">\n                <div\n                  class=\"text-danger small\"\n                  *ngIf=\"form.get('password')?.errors!['minlength']\"\n                >\n                  Password must be at least 4 characters\n                </div>\n              </ng-container>\n            </div>\n            <div class=\"form-group mb-2\">\n              <input\n                formControlName=\"confirmPassword\"\n                type=\"password\"\n                class=\"form-control\"\n                placeholder=\"Confirm Password\"\n              />\n              <div\n                class=\"text-danger small\"\n                *ngIf=\"\n                  form.errors &&\n                  form.errors['mustMatch'] &&\n                  (form.get('confirmPassword')?.dirty ||\n                    form.get('confirmPassword')?.touched)\n                \"\n              >\n                Passwords don't match\n              </div>\n            </div>\n            <div class=\"form-group mb-2\">\n              <input\n                formControlName=\"email\"\n                type=\"email\"\n                class=\"form-control\"\n                placeholder=\"Email\"\n              />\n              <ng-container *ngIf=\"isErrorState(form.get('email'))\">\n                <div\n                  class=\"text-danger small\"\n                  *ngIf=\"form.get('email')?.errors!['email']\"\n                >\n                  Invalid email address\n                </div>\n              </ng-container>\n            </div>\n            <div class=\"form-group mb-2\">\n              <input\n                formControlName=\"displayName\"\n                class=\"form-control\"\n                placeholder=\"Full Name\"\n              />\n              <ng-container *ngIf=\"isErrorState(form.get('displayName'))\">\n                <div\n                  class=\"text-danger small\"\n                  *ngIf=\"form.get('displayName')?.errors!['pattern']\"\n                >\n                  Name must be alphanumeric\n                </div>\n                <div\n                  class=\"text-danger small\"\n                  *ngIf=\"form.get('displayName')?.errors!['maxlength']\"\n                >\n                  Name cannot be more than 50 character\n                </div>\n              </ng-container>\n            </div>\n            <div class=\"form-group text-center\">\n              <a class=\"btn btn-link\" routerLink=\"/login\">\n                Already have account? Login\n              </a>\n              <button\n                class=\"btn btn-primary btn-block\"\n                data-effect=\"wave\"\n                type=\"submit\"\n                [disabled]=\"form.invalid\"\n              >\n                Register\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","export class Roles {\r\n    static ADMIN = \"admin\";\r\n    static CUSTOMER = \"customer\";\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n\r\n@Injectable({\r\n    providedIn:'root',\r\n})\r\nexport class AlertService {\r\n    constructor(private snack: MatSnackBar) {}\r\n\r\n    success(message: string, action = \"OK\") {\r\n        return this.snack.open(message, action, {\r\n            horizontalPosition: \"end\",\r\n        });\r\n    }\r\n\r\n    fail(message: string, action = \"OK\") {\r\n        return this.snack.open(message, action, {\r\n            panelClass: ['bg-danger'],\r\n            horizontalPosition: \"end\",\r\n        });\r\n    }\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { CurrentUser } from \"../models/current-user\";\r\nimport { LoginResponse } from \"../models/login-response\";\r\nimport { RegisterCustomer } from \"../models/register-customer\";\r\n\r\nconst LOCAL_STORAGE_KEY = 'myshop:user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n    private _isAuthenticated$ = new BehaviorSubject<boolean>(false);\r\n    private _currentUser$ = new BehaviorSubject<CurrentUser | null>(null);\r\n\r\n    get isAuthenticated() {\r\n        return this._isAuthenticated$.value;\r\n    }\r\n\r\n    get isAuthenticated$() {\r\n        return this._isAuthenticated$.asObservable();\r\n    }\r\n\r\n    get currentUser() {\r\n        return this._currentUser$.value;\r\n    }\r\n\r\n    get currentUser$() {\r\n        return this._currentUser$.asObservable();\r\n    }\r\n\r\n    get isTokenExpired() {\r\n        var data = this.getAuthData();\r\n        return !data?.expiresAt || new Date(data.expiresAt) < new Date()\r\n    }\r\n\r\n    constructor(private http: HttpClient, private router: Router) { }\r\n\r\n    registerCustomer(customer: RegisterCustomer) {\r\n        return this.http.post<LoginResponse>('/api/auth/register', customer);\r\n    }\r\n\r\n    login(userName: string, password: string) {\r\n        return this.http.post<LoginResponse>('/api/auth', {\r\n            userName,\r\n            password,\r\n        });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(LOCAL_STORAGE_KEY);\r\n        this._isAuthenticated$.next(false);\r\n        this._currentUser$.next(null);\r\n        this.router.navigate(['/login']);\r\n    }\r\n\r\n    saveAuthData(loginResponse: LoginResponse) {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(loginResponse));\r\n        this.initAuth();\r\n    }\r\n\r\n    getAuthData(): LoginResponse | null {\r\n        var data = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n        if (data) {\r\n            return JSON.parse(data) as LoginResponse;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    initAuth() {\r\n        var data = this.getAuthData();\r\n        if (data) {\r\n            this._isAuthenticated$.next(true);\r\n            this._currentUser$.next(data as CurrentUser);\r\n        }\r\n    }\r\n    \r\n    hasRole(role: string): boolean {\r\n        if (!this.currentUser || !this.currentUser.roles) {\r\n            return false;\r\n        }\r\n        return this.currentUser.roles.indexOf(role) != -1;\r\n    }\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Category } from \"../models/category\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getCategories() {\r\n        return this.http.get<Category[]>(`/api/categories`);\r\n    }\r\n}","import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { CreateOrder } from \"../models/create-order\";\r\nimport { CreateOrderResponse } from \"../models/create-order-response\";\r\nimport { AlertService } from \"./alert.service\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n    constructor(\r\n        private http: HttpClient, \r\n        private authService: AuthService, \r\n        private alertService: AlertService) {}\r\n\r\n    createOrder(order: CreateOrder) {\r\n        return this.http.post<CreateOrderResponse>('/api/orders/', order);\r\n    }\r\n\r\n    completePendingOrder() {\r\n        if (!this.authService.isAuthenticated) return;\r\n        const orderId = localStorage.getItem(\"temp_order\");\r\n        if (!orderId || !parseInt(orderId)) return;\r\n        \r\n        this.http.get(`/api/orders/complete_order/${parseInt(orderId)}`)\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success(`Order #${orderId} completed successfully!`);\r\n                    localStorage.removeItem('temp_order');\r\n                },\r\n                error: (err: HttpErrorResponse) => {\r\n                    this.alertService.fail(err.error.message, \"OK\");\r\n                }\r\n            })\r\n    }\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { CreateOrUpdateProduct } from \"../models/create-or-update-product\";\r\nimport { Product } from \"../models/product\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getProducts(categoryId?: number | undefined) {\r\n        let url = '/api/products';\r\n        if (categoryId) {\r\n            url += `?categoryId=${categoryId}`;\r\n        }\r\n        return this.http.get<Product[]>(url);\r\n    }\r\n\r\n    createProduct(product: CreateOrUpdateProduct) {\r\n        return this.http.post<number>('/api/products', product);\r\n    }\r\n\r\n    updateProduct(product: CreateOrUpdateProduct) {\r\n        return this.http.put('/api/products', product);\r\n    }\r\n\r\n    deleteProduct(productId: number) {\r\n        return this.http.delete(`/api/products/${productId}`);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}